[{"D:\\Web\\counter\\src\\index.tsx":"1","D:\\Web\\counter\\src\\reportWebVitals.ts":"2","D:\\Web\\counter\\src\\App.tsx":"3","D:\\Web\\counter\\src\\components\\Counter\\Counter.tsx":"4","D:\\Web\\counter\\src\\components\\Counter\\CounterDisplay\\CounterDisplay.tsx":"5","D:\\Web\\counter\\src\\components\\CounterSet\\CounterSet.tsx":"6","D:\\Web\\counter\\src\\components\\CounterSet\\CounterSetButton\\CounterSetButton.tsx":"7","D:\\web\\counter\\src\\index.tsx":"8","D:\\web\\counter\\src\\reportWebVitals.ts":"9","D:\\web\\counter\\src\\App.tsx":"10","D:\\web\\counter\\src\\components\\CounterSet\\CounterSet.tsx":"11","D:\\web\\counter\\src\\components\\Counter\\Counter.tsx":"12","D:\\web\\counter\\src\\components\\CounterSet\\CounterSetButton\\CounterSetButton.tsx":"13","D:\\web\\counter\\src\\components\\Counter\\CounterDisplay\\CounterDisplay.tsx":"14","D:\\web\\counter\\src\\components\\Button\\Button.tsx":"15"},{"size":518,"mtime":1610232410364,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1610016554184,"results":"18","hashOfConfig":"17"},{"size":1623,"mtime":1610401138124,"results":"19","hashOfConfig":"17"},{"size":1471,"mtime":1610402509429,"results":"20","hashOfConfig":"17"},{"size":994,"mtime":1610402780868,"results":"21","hashOfConfig":"17"},{"size":1860,"mtime":1610401986842,"results":"22","hashOfConfig":"17"},{"size":743,"mtime":1610402235612,"results":"23","hashOfConfig":"17"},{"size":518,"mtime":1610723144749,"results":"24","hashOfConfig":"25"},{"size":440,"mtime":1610723144756,"results":"26","hashOfConfig":"25"},{"size":2538,"mtime":1610725800114,"results":"27","hashOfConfig":"25"},{"size":1860,"mtime":1610723144733,"results":"28","hashOfConfig":"25"},{"size":1365,"mtime":1610724673392,"results":"29","hashOfConfig":"25"},{"size":743,"mtime":1610723144740,"results":"30","hashOfConfig":"25"},{"size":994,"mtime":1610723144731,"results":"31","hashOfConfig":"25"},{"size":1353,"mtime":1610725822852,"results":"32","hashOfConfig":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1mbs41c",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ij9w7z",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web\\counter\\src\\index.tsx",[],["71","72"],"D:\\Web\\counter\\src\\reportWebVitals.ts",[],"D:\\Web\\counter\\src\\App.tsx",["73"],"import React, {useState} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.scss';\r\nimport {Counter} from \"./components/Counter/Counter\";\r\nimport {CounterSet} from \"./components/CounterSet/CounterSet\";\r\n\r\nexport type limitValueType = {\r\n    maxValue: number\r\n    startValue: number\r\n}\r\n\r\nexport type refreshCounterType = () => void\r\n\r\nfunction App() {\r\n    let [counterSet, setCounterSet] = useState<boolean>(true)\r\n    let [tempLimitValue, setTempLimitValue] = useState<limitValueType>({maxValue: 5, startValue: 0})\r\n    let [limitValue, setLimitValue] = useState<limitValueType>({\r\n        maxValue: tempLimitValue.maxValue,\r\n        startValue: tempLimitValue.startValue\r\n    })\r\n    let [count, setCount] = useState<number>(0)\r\n\r\n    const counterLimitsSet = () => {\r\n        setLimitValue({...tempLimitValue})\r\n        setCount(tempLimitValue.startValue)\r\n        setCounterSet(true)\r\n    }\r\n\r\n    return (\r\n        <div className={'app'}>\r\n            <Counter count={count}\r\n                     setCount={setCount}\r\n                     limitValue={limitValue}\r\n                     counterSet={counterSet}\r\n                     tempLimitValue={tempLimitValue}/>\r\n            <CounterSet limitValue={limitValue}\r\n                        setLimitValue={setLimitValue}\r\n                        counterLimitsSet={counterLimitsSet}\r\n                        tempLimitValue={tempLimitValue}\r\n                        setTempLimitValue={setTempLimitValue}\r\n                        counterSet={counterSet}\r\n                        setCounterSet={setCounterSet}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\Web\\counter\\src\\components\\Counter\\Counter.tsx",["74"],"import React, {useState} from \"react\";\r\nimport {CounterDisplay} from \"./CounterDisplay/CounterDisplay\";\r\nimport s from './Counter.module.scss'\r\nimport {CounterButton} from \"./CounterButton/CounterButton\";\r\nimport {limitValueType} from \"../../App\";\r\n\r\nexport type CounterPropsType = {\r\n    count: number\r\n    setCount: (count: number) => void\r\n    limitValue: limitValueType\r\n    counterSet: boolean\r\n    tempLimitValue: limitValueType\r\n}\r\n\r\nexport function Counter(props: CounterPropsType) {\r\n\r\n    let increment = () => {\r\n        if (props.count < props.limitValue.maxValue) {\r\n            props.setCount(props.count + 1)\r\n        }\r\n    }\r\n\r\n    let resetCount = () => {\r\n        props.setCount(props.limitValue.startValue)\r\n    }\r\n\r\n    let buttonFunctions = {\r\n        increment: increment,\r\n        resetCount: resetCount\r\n    }\r\n\r\n    return (\r\n        <div className={s.counter}>\r\n            <CounterDisplay counterSet={props.counterSet} count={props.count} limitValue={props.limitValue} tempLimitValue={props.tempLimitValue}/>\r\n            <div className={s.buttonWrapper}>\r\n                <CounterButton buttonName={'Increment'} count={props.count} buttonFunctions={buttonFunctions} limitValue={props.limitValue} counterSet={props.counterSet}/>\r\n                <CounterButton buttonName={'Reset'} count={props.count} buttonFunctions={buttonFunctions} limitValue={props.limitValue} counterSet={props.counterSet}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Web\\counter\\src\\components\\Counter\\CounterDisplay\\CounterDisplay.tsx",[],"D:\\Web\\counter\\src\\components\\CounterSet\\CounterSet.tsx",["75"],"import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './CounterSet.module.scss'\r\nimport {CounterSetButton} from \"./CounterSetButton/CounterSetButton\";\r\nimport {limitValueType, refreshCounterType} from \"../../App\";\r\n\r\nexport type CounterSetPropsType = {\r\n    limitValue: limitValueType\r\n    setLimitValue: (limit: limitValueType) => void\r\n    counterLimitsSet: () => void\r\n    tempLimitValue: limitValueType\r\n    setTempLimitValue: (limit: limitValueType) => void\r\n}\r\n\r\nexport function CounterSet(props: CounterSetPropsType) {\r\n\r\n\r\n    const changeMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setTempLimitValue({...props.tempLimitValue, maxValue: +e.currentTarget.value})\r\n    }\r\n\r\n    const changeStartValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setTempLimitValue({...props.tempLimitValue, startValue: +e.currentTarget.value})\r\n    }\r\n\r\n    return (\r\n        <div className={s.counterSet}>\r\n            <div className={s.setSettingsWrapper}>\r\n                <div className={s.inputRow}>\r\n                    <span>Max value:</span>\r\n                    <input className={s.input} type=\"number\" value={props.tempLimitValue.maxValue} onChange={changeMaxValue}/>\r\n                </div>\r\n                <div className={s.inputRow}>\r\n                    <span>Start value:</span>\r\n                    <input className={s.input} type=\"number\" value={props.tempLimitValue.startValue} onChange={changeStartValue}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.buttonWrapper}>\r\n                <CounterSetButton counterLimitsSet={props.counterLimitsSet} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Web\\counter\\src\\components\\CounterSet\\CounterSetButton\\CounterSetButton.tsx",["76"],"import React from \"react\";\r\nimport s from './CounterSetButton.module.scss'\r\nimport {limitValueType, refreshCounterType} from \"../../../App\";\r\n\r\ntype CounterSetButtonType = {\r\n    counterLimitsSet: () => void\r\n    tempLimitValue: limitValueType\r\n}\r\n\r\nexport function CounterSetButton (props: CounterSetButtonType) {\r\n\r\n    let buttonStyle = () => {\r\n        return (props.tempLimitValue.maxValue <= props.tempLimitValue.startValue) ? s.disabled : '';\r\n    }\r\n\r\n    let buttonFunc = () => {\r\n        return (props.tempLimitValue.maxValue <= props.tempLimitValue.startValue) ? () => {} : () => props.counterLimitsSet()\r\n\r\n    }\r\n\r\n    return (\r\n        <button className={`${s.btn} ${buttonStyle()}`} onClick={buttonFunc()}>Set</button>\r\n    )\r\n}","D:\\web\\counter\\src\\index.tsx",[],"D:\\web\\counter\\src\\reportWebVitals.ts",[],"D:\\web\\counter\\src\\App.tsx",["77","78","79","80"],"D:\\web\\counter\\src\\components\\CounterSet\\CounterSet.tsx",["81","82"],"import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './CounterSet.module.scss'\r\nimport {CounterSetButton} from \"./CounterSetButton/CounterSetButton\";\r\nimport {limitValueType, refreshCounterType} from \"../../App\";\r\n\r\nexport type CounterSetPropsType = {\r\n    limitValue: limitValueType\r\n    setLimitValue: (limit: limitValueType) => void\r\n    counterLimitsSet: () => void\r\n    tempLimitValue: limitValueType\r\n    setTempLimitValue: (limit: limitValueType) => void\r\n    counterSet: boolean\r\n    setCounterSet: (isSet: boolean) => void\r\n}\r\n\r\nexport function CounterSet(props: CounterSetPropsType) {\r\n\r\n\r\n    const changeMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setTempLimitValue({...props.tempLimitValue, maxValue: +e.currentTarget.value})\r\n        props.setCounterSet(false)\r\n    }\r\n\r\n    const changeStartValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setTempLimitValue({...props.tempLimitValue, startValue: +e.currentTarget.value})\r\n        props.setCounterSet(false)\r\n    }\r\n\r\n    return (\r\n        <div className={s.counterSet}>\r\n            <div className={s.setSettingsWrapper}>\r\n                <div className={s.inputRow}>\r\n                    <span>Max value:</span>\r\n                    <input className={s.input} type=\"number\" value={props.tempLimitValue.maxValue} onChange={changeMaxValue}/>\r\n                </div>\r\n                <div className={s.inputRow}>\r\n                    <span>Start value:</span>\r\n                    <input className={s.input} type=\"number\" value={props.tempLimitValue.startValue} onChange={changeStartValue}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.buttonWrapper}>\r\n                <CounterSetButton tempLimitValue={props.tempLimitValue} counterLimitsSet={props.counterLimitsSet} />\r\n            </div>\r\n        </div>\r\n    )\r\n}",["83","84"],"D:\\web\\counter\\src\\components\\Counter\\Counter.tsx",["85"],"import React, {useState} from \"react\";\r\nimport {CounterDisplay} from \"./CounterDisplay/CounterDisplay\";\r\nimport s from './Counter.module.scss'\r\nimport {Button} from \"../Button/Button\";\r\nimport {limitValueType} from \"../../App\";\r\n\r\nexport type CounterPropsType = {\r\n    count: number\r\n    setCount: (count: number) => void\r\n    limitValue: limitValueType\r\n    counterSet: boolean\r\n    tempLimitValue: limitValueType\r\n    buttonIncrement: () => void\r\n    buttonResetCount: () => void\r\n}\r\n\r\nexport function Counter(props: CounterPropsType) {\r\n\r\n    let buttonFunctions = {\r\n        increment: props.buttonIncrement,\r\n        resetCount: props.buttonResetCount\r\n    }\r\n\r\n    return (\r\n        <div className={s.counter}>\r\n            <CounterDisplay counterSet={props.counterSet} count={props.count} limitValue={props.limitValue}\r\n                            tempLimitValue={props.tempLimitValue}/>\r\n            <div className={s.buttonWrapper}>\r\n                <Button buttonName={'Increment'} count={props.count} buttonFunctions={buttonFunctions}\r\n                        limitValue={props.limitValue} counterSet={props.counterSet}/>\r\n                <Button buttonName={'Reset'} count={props.count} buttonFunctions={buttonFunctions}\r\n                        limitValue={props.limitValue} counterSet={props.counterSet}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\web\\counter\\src\\components\\CounterSet\\CounterSetButton\\CounterSetButton.tsx",["86"],"D:\\web\\counter\\src\\components\\Counter\\CounterDisplay\\CounterDisplay.tsx",[],"D:\\web\\counter\\src\\components\\Button\\Button.tsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":12},{"ruleId":"91","severity":1,"message":"95","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":24},{"ruleId":"91","severity":1,"message":"95","line":1,"column":29,"nodeType":"93","messageId":"94","endLine":1,"endColumn":37},{"ruleId":"91","severity":1,"message":"96","line":3,"column":25,"nodeType":"93","messageId":"94","endLine":3,"endColumn":43},{"ruleId":"91","severity":1,"message":"97","line":36,"column":11,"nodeType":"93","messageId":"94","endLine":36,"endColumn":31},{"ruleId":"91","severity":1,"message":"98","line":44,"column":11,"nodeType":"93","messageId":"94","endLine":44,"endColumn":27},{"ruleId":"91","severity":1,"message":"99","line":48,"column":11,"nodeType":"93","messageId":"94","endLine":48,"endColumn":27},{"ruleId":"91","severity":1,"message":"100","line":52,"column":11,"nodeType":"93","messageId":"94","endLine":52,"endColumn":32},{"ruleId":"91","severity":1,"message":"95","line":1,"column":29,"nodeType":"93","messageId":"94","endLine":1,"endColumn":37},{"ruleId":"91","severity":1,"message":"96","line":4,"column":25,"nodeType":"93","messageId":"94","endLine":4,"endColumn":43},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","replacedBy":"102"},{"ruleId":"91","severity":1,"message":"95","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":24},{"ruleId":"91","severity":1,"message":"96","line":3,"column":25,"nodeType":"93","messageId":"94","endLine":3,"endColumn":43},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'refreshCounterType' is defined but never used.","'buttonStyleIncrement' is assigned a value but never used.","'buttonStyleReset' is assigned a value but never used.","'buttonSetCounter' is assigned a value but never used.","'buttonStyleSetCounter' is assigned a value but never used.",["103"],["104"],"no-global-assign","no-unsafe-negation"]