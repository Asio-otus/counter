[{"D:\\Web\\counter\\src\\index.tsx":"1","D:\\Web\\counter\\src\\reportWebVitals.ts":"2","D:\\Web\\counter\\src\\App.tsx":"3","D:\\Web\\counter\\src\\components\\Counter\\Counter.tsx":"4","D:\\Web\\counter\\src\\components\\Counter\\CounterDisplay\\CounterDisplay.tsx":"5","D:\\Web\\counter\\src\\components\\CounterSet\\CounterSet.tsx":"6","D:\\Web\\counter\\src\\components\\Counter\\CounterButton\\CounterButton.tsx":"7","D:\\Web\\counter\\src\\components\\CounterSet\\CounterSetButton\\CounterSetButton.tsx":"8"},{"size":518,"mtime":1610232410364,"results":"9","hashOfConfig":"10"},{"size":440,"mtime":1610016554184,"results":"11","hashOfConfig":"10"},{"size":1258,"mtime":1610314982798,"results":"12","hashOfConfig":"10"},{"size":1282,"mtime":1610311008680,"results":"13","hashOfConfig":"10"},{"size":540,"mtime":1610311018264,"results":"14","hashOfConfig":"10"},{"size":1680,"mtime":1610314239955,"results":"15","hashOfConfig":"10"},{"size":1033,"mtime":1610310597934,"results":"16","hashOfConfig":"10"},{"size":379,"mtime":1610314258706,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1mbs41c",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Web\\counter\\src\\index.tsx",[],["36","37"],"D:\\Web\\counter\\src\\reportWebVitals.ts",[],"D:\\Web\\counter\\src\\App.tsx",["38"],"D:\\Web\\counter\\src\\components\\Counter\\Counter.tsx",["39"],"D:\\Web\\counter\\src\\components\\Counter\\CounterDisplay\\CounterDisplay.tsx",[],"D:\\Web\\counter\\src\\components\\CounterSet\\CounterSet.tsx",["40"],"import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './CounterSet.module.scss'\r\nimport {CounterSetButton} from \"./CounterSetButton/CounterSetButton\";\r\nimport {limitValueType, refreshCounterType} from \"../../App\";\r\n\r\nexport type CounterSetPropsType = {\r\n    limitValue: limitValueType\r\n    setLimitValue: (limit: limitValueType) => void\r\n    counterLimitsSet: () => void\r\n    tempLimitValue: limitValueType\r\n    setTempLimitValue: (limit: limitValueType) => void\r\n}\r\n\r\nexport function CounterSet(props: CounterSetPropsType) {\r\n\r\n\r\n    const changeMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setTempLimitValue({...props.tempLimitValue, maxValue: +e.currentTarget.value})\r\n    }\r\n\r\n    const changeStartValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setTempLimitValue({...props.tempLimitValue, startValue: +e.currentTarget.value})\r\n    }\r\n\r\n    return (\r\n        <div className={s.counterSet}>\r\n            <div className={s.setSettingsWrapper}>\r\n                <div className={s.inputRow}>\r\n                    <span>Max value:</span>\r\n                    <input className={s.input} type=\"number\" value={props.tempLimitValue.maxValue} onChange={changeMaxValue}/>\r\n                </div>\r\n                <div className={s.inputRow}>\r\n                    <span>Start value:</span>\r\n                    <input className={s.input} type=\"number\" value={props.tempLimitValue.startValue} onChange={changeStartValue}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.buttonWrapper}>\r\n                <CounterSetButton counterLimitsSet={props.counterLimitsSet} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Web\\counter\\src\\components\\Counter\\CounterButton\\CounterButton.tsx",[],"D:\\Web\\counter\\src\\components\\CounterSet\\CounterSetButton\\CounterSetButton.tsx",["41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":24},{"ruleId":"46","severity":1,"message":"50","line":1,"column":29,"nodeType":"48","messageId":"49","endLine":1,"endColumn":37},{"ruleId":"46","severity":1,"message":"51","line":3,"column":9,"nodeType":"48","messageId":"49","endLine":3,"endColumn":27},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'refreshCounterType' is defined but never used.","no-global-assign","no-unsafe-negation"]