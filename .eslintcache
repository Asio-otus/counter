[{"D:\\Web\\counter\\src\\index.tsx":"1","D:\\Web\\counter\\src\\reportWebVitals.ts":"2","D:\\Web\\counter\\src\\App.tsx":"3","D:\\Web\\counter\\src\\components\\Counter\\Counter.tsx":"4","D:\\Web\\counter\\src\\components\\Counter\\CounterDisplay\\CounterDisplay.tsx":"5","D:\\Web\\counter\\src\\components\\CounterSet\\CounterSet.tsx":"6","D:\\web\\counter\\src\\index.tsx":"7","D:\\web\\counter\\src\\reportWebVitals.ts":"8","D:\\web\\counter\\src\\App.tsx":"9","D:\\web\\counter\\src\\components\\CounterSet\\CounterSet.tsx":"10","D:\\web\\counter\\src\\components\\Counter\\Counter.tsx":"11","D:\\web\\counter\\src\\components\\Counter\\CounterDisplay\\CounterDisplay.tsx":"12","D:\\web\\counter\\src\\components\\Button\\Button.tsx":"13","D:\\Web\\counter\\src\\components\\Button\\Button.tsx":"14"},{"size":518,"mtime":1610784002394,"results":"15","hashOfConfig":"16"},{"size":440,"mtime":1610784002394,"results":"17","hashOfConfig":"16"},{"size":5154,"mtime":1610997449621,"results":"18","hashOfConfig":"16"},{"size":1043,"mtime":1610995451479,"results":"19","hashOfConfig":"16"},{"size":544,"mtime":1610996662243,"results":"20","hashOfConfig":"16"},{"size":1555,"mtime":1610997550364,"results":"21","hashOfConfig":"16"},{"size":518,"mtime":1610723144749,"results":"22","hashOfConfig":"23"},{"size":440,"mtime":1610723144756,"results":"24","hashOfConfig":"23"},{"size":2538,"mtime":1610725800114,"results":"25","hashOfConfig":"23"},{"size":1860,"mtime":1610723144733,"results":"26","hashOfConfig":"23"},{"size":1365,"mtime":1610724673392,"results":"27","hashOfConfig":"23"},{"size":994,"mtime":1610723144731,"results":"28","hashOfConfig":"23"},{"size":1353,"mtime":1610725822852,"results":"29","hashOfConfig":"23"},{"size":911,"mtime":1610794395505,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"9c6qux",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ij9w7z",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"D:\\Web\\counter\\src\\index.tsx",[],["63","64"],"D:\\Web\\counter\\src\\reportWebVitals.ts",[],"D:\\Web\\counter\\src\\App.tsx",[],"D:\\Web\\counter\\src\\components\\Counter\\Counter.tsx",[],"D:\\Web\\counter\\src\\components\\Counter\\CounterDisplay\\CounterDisplay.tsx",[],"D:\\Web\\counter\\src\\components\\CounterSet\\CounterSet.tsx",[],"D:\\web\\counter\\src\\index.tsx",[],"D:\\web\\counter\\src\\reportWebVitals.ts",[],"D:\\web\\counter\\src\\App.tsx",["65","66","67","68"],"D:\\web\\counter\\src\\components\\CounterSet\\CounterSet.tsx",["69","70"],"import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './CounterSet.module.scss'\r\nimport {CounterSetButton} from \"./CounterSetButton/CounterSetButton\";\r\nimport {limitValueType, refreshCounterType} from \"../../App\";\r\n\r\nexport type CounterSetPropsType = {\r\n    limitValue: limitValueType\r\n    setLimitValue: (limit: limitValueType) => void\r\n    counterLimitsSet: () => void\r\n    tempLimitValue: limitValueType\r\n    setTempLimitValue: (limit: limitValueType) => void\r\n    counterSet: boolean\r\n    setCounterSet: (isSet: boolean) => void\r\n}\r\n\r\nexport function CounterSet(props: CounterSetPropsType) {\r\n\r\n\r\n    const changeMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setTempLimitValue({...props.tempLimitValue, maxValue: +e.currentTarget.value})\r\n        props.setCounterSet(false)\r\n    }\r\n\r\n    const changeStartValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setTempLimitValue({...props.tempLimitValue, startValue: +e.currentTarget.value})\r\n        props.setCounterSet(false)\r\n    }\r\n\r\n    return (\r\n        <div className={s.counterSet}>\r\n            <div className={s.setSettingsWrapper}>\r\n                <div className={s.inputRow}>\r\n                    <span>Max value:</span>\r\n                    <input className={s.input} type=\"number\" value={props.tempLimitValue.maxValue} onChange={changeMaxValue}/>\r\n                </div>\r\n                <div className={s.inputRow}>\r\n                    <span>Start value:</span>\r\n                    <input className={s.input} type=\"number\" value={props.tempLimitValue.startValue} onChange={changeStartValue}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.buttonWrapper}>\r\n                <CounterSetButton tempLimitValue={props.tempLimitValue} counterLimitsSet={props.counterLimitsSet} />\r\n            </div>\r\n        </div>\r\n    )\r\n}",["71","72"],"D:\\web\\counter\\src\\components\\Counter\\Counter.tsx",["73"],"import React, {useState} from \"react\";\r\nimport {CounterDisplay} from \"./CounterDisplay/CounterDisplay\";\r\nimport s from './Counter.module.scss'\r\nimport {Button} from \"../Button/Button\";\r\nimport {limitValueType} from \"../../App\";\r\n\r\nexport type CounterPropsType = {\r\n    count: number\r\n    setCount: (count: number) => void\r\n    limitValue: limitValueType\r\n    counterSet: boolean\r\n    tempLimitValue: limitValueType\r\n    buttonIncrement: () => void\r\n    buttonResetCount: () => void\r\n}\r\n\r\nexport function Counter(props: CounterPropsType) {\r\n\r\n    let buttonFunctions = {\r\n        increment: props.buttonIncrement,\r\n        resetCount: props.buttonResetCount\r\n    }\r\n\r\n    return (\r\n        <div className={s.counter}>\r\n            <CounterDisplay counterSet={props.counterSet} count={props.count} limitValue={props.limitValue}\r\n                            tempLimitValue={props.tempLimitValue}/>\r\n            <div className={s.buttonWrapper}>\r\n                <Button buttonName={'Increment'} count={props.count} buttonFunctions={buttonFunctions}\r\n                        limitValue={props.limitValue} counterSet={props.counterSet}/>\r\n                <Button buttonName={'Reset'} count={props.count} buttonFunctions={buttonFunctions}\r\n                        limitValue={props.limitValue} counterSet={props.counterSet}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\web\\counter\\src\\components\\Counter\\CounterDisplay\\CounterDisplay.tsx",[],"D:\\web\\counter\\src\\components\\Button\\Button.tsx",[],"D:\\Web\\counter\\src\\components\\Button\\Button.tsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":36,"column":11,"nodeType":"80","messageId":"81","endLine":36,"endColumn":31},{"ruleId":"78","severity":1,"message":"82","line":44,"column":11,"nodeType":"80","messageId":"81","endLine":44,"endColumn":27},{"ruleId":"78","severity":1,"message":"83","line":48,"column":11,"nodeType":"80","messageId":"81","endLine":48,"endColumn":27},{"ruleId":"78","severity":1,"message":"84","line":52,"column":11,"nodeType":"80","messageId":"81","endLine":52,"endColumn":32},{"ruleId":"78","severity":1,"message":"85","line":1,"column":29,"nodeType":"80","messageId":"81","endLine":1,"endColumn":37},{"ruleId":"78","severity":1,"message":"86","line":4,"column":25,"nodeType":"80","messageId":"81","endLine":4,"endColumn":43},{"ruleId":"74","replacedBy":"87"},{"ruleId":"76","replacedBy":"88"},{"ruleId":"78","severity":1,"message":"85","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":24},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"@typescript-eslint/no-unused-vars","'buttonStyleIncrement' is assigned a value but never used.","Identifier","unusedVar","'buttonStyleReset' is assigned a value but never used.","'buttonSetCounter' is assigned a value but never used.","'buttonStyleSetCounter' is assigned a value but never used.","'useState' is defined but never used.","'refreshCounterType' is defined but never used.",["89"],["90"],"no-global-assign","no-unsafe-negation"]